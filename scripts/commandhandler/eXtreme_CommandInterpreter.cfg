//
// Project:				eXtremeServer Sauerbraten
// File Name: 			eXtreme_CommandInterpreter.cfg
// Author: 				BudSpencer
// Date: 				2017
// 
// Purpose: 			define command interpreter to process command and its parameters
// Note: 				the alias "eXtreme_CommandHandler" below is executed by server, please never delete it
//



eXtreme_CommandHandler = [
	handler_text = $command_text ; handler_caller = $command_caller // use this two build-ins to parse and execute command
	handler_cmdfound = 0 ; handler_cmdpos = 0 ; handler_arglist = []
	handler_ident = "" ; handler_priv = 0 ; handler_str = ""
	handler_currargtype = "" ; handler_errcount = 0 ; handler_argty = "" ; handler_help = ""
	handler_command = ( substr ( at $handler_text 0 ) 1 ( - ( strlen ( at $handler_text 0 ) ) 1 ) )
	loop i ( - ( listlen $handler_text ) 1 ) [
		handler_cmdpos = ( + $handler_cmdpos 1 )
		cond ( ! ( listlen $handler_arglist ) ) [
			handler_arglist = ( concatword $handler_arglist ( escape ( at $handler_text $handler_cmdpos ) ) )
		] [
			handler_arglist = ( concat $handler_arglist ( escape ( at $handler_text $handler_cmdpos ) ) )
		]
	]
	handler_cmdpos = -1
	loopwhile x ( listlen $COMMAND_NAMES ) [ = $handler_cmdfound 0 ] [
		handler_cmdpos = ( + $handler_cmdpos 1 )
		handler_cmdfound = ( ? ( =s ( at $COMMAND_NAMES $handler_cmdpos ) $handler_command ) 1 0 )
	]	
	cond ( ! $handler_cmdfound ) [
		ERR_COMMANDNOTFOUND $handler_command 
		handler_errcount = ( + $handler_errcount 1 )
	]
	cond ( = $handler_errcount 0 ) [ // still no errors
		handler_argty = ( escape ( at $COMMAND_ARGTY $handler_cmdpos ) )
		handler_ident = ( escape ( at $COMMAND_IDENT $handler_cmdpos ) )
		handler_priv = ( escape ( at $COMMAND_PRIVI $handler_cmdpos ) )
		cond ( != ( listlen $handler_arglist ) ( - ( strlen $handler_argty ) 2 ) ) [
			ERR_TOOMUCHORLESSPARAMS ( - ( strlen $handler_argty ) 2 ) ( listlen $handler_arglist ) 
			handler_errcount = ( + $handler_errcount 1 )
		]
		cond ( = $handler_errcount 0 ) [
			loop i ( strlen ( unescape $handler_argty ) ) [
				handler_currargtype = ( substr ( unescape $handler_argty ) $i 1 )
				cases $handler_currargtype "i" [
					if ( = ( eXtreme_isInteger ( unescape ( at $handler_arglist ( - $i 1 ) ) ) ) 0 ) [
						ERR_INVALIDTYPE ( eXtreme_getDataType ( at $handler_arglist ( - $i 1 ) ) ) "Integer" $handler_text ( at $handler_arglist ( - $i 1 ) )
						handler_errcount = ( + $handler_errcount 1 )
					] 
				] "f" [
					if ( = ( eXtreme_isFloat ( unescape ( at $handler_arglist ( - $i 1 ) ) ) ) 0 ) [ 
						ERR_INVALIDTYPE ( eXtreme_getDataType ( at $handler_arglist ( - $i 1 ) ) ) "Float" $handler_text ( at $handler_arglist ( - $i 1 ) )
						handler_errcount = ( + $handler_errcount 1 )
					]
				] "w" [
					if ( = ( eXtreme_isWord ( unescape ( at $handler_arglist ( - $i 1 ) ) ) ) 0 ) [
						ERR_INVALIDTYPE ( eXtreme_getDataType ( at $handler_arglist ( - $i 1 ) ) ) "Word" $handler_text ( at $handler_arglist ( - $i 1 ) ) 
						handler_errcount = ( + $handler_errcount 1 )
					]
				] "s" [
					if ( = ( eXtreme_isString ( unescape ( at $handler_arglist ( - $i 1 ) ) ) ) 0 ) [
						ERR_INVALIDTYPE ( eXtreme_getDataType ( at $handler_arglist ( - $i 1 ) ) ) "String" $handler_text ( at $handler_arglist ( - $i 1 ) )
						handler_errcount = ( + $handler_errcount 1 )
					]
				]
			]
			cond ( = $handler_errcount 0 ) [
				handler_str = ( concatword $handler_str $handler_ident )
				handler_str = ( concat $handler_str $handler_arglist )
				do $handler_str
			]
		]
	]
]
	