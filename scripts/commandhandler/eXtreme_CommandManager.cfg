//
// Project:				eXtremeServer Sauerbraten
// File Name: 			eXtreme_CommandManager.cfg
// Author: 				BudSpencer
// Date: 				2017
// 
// Purpose: 			define functions to manage commands 
//



// ADDCOMMAND
// ADD COMMAND TO LIST OF EXECUTABLE COMMANDS
// DOESN'T WORK IF COMMAND ALREADY EXISTS
eXtreme_AddCommand = [
	cmd_name = ( format $arg1 ) ; cmd_alias = ( format $arg2 )
	cmd_priv = ( format $arg3 ) ; cmd_argtypes = ( format $arg4 )
	cmd_helpstr = ( format $arg5 ) ; cmd_enabled = ( format $arg6 )
	cond ( eXtreme_CheckForArguments $cmd_name $cmd_alias $cmd_priv $cmd_helpstr $cmd_enabled ) [
		cond ( ! ( eXtreme_CommandExists $cmd_name ) ) [
			COMMAND_NAMES = ( eXtreme_AddToList $COMMAND_NAMES $cmd_name ) // add command name (you'll use this name to call command (e.g. #help))
			COMMAND_IDENT = ( eXtreme_AddToList $COMMAND_IDENT $cmd_alias ) // add command ident (which'll be executed if command is called)
			COMMAND_ARGTY = ( eXtreme_AddToList $COMMAND_ARGTY $cmd_argtypes ) // add argument type list to list 
			COMMAND_PRIVI = ( eXtreme_AddToList $COMMAND_PRIVI $cmd_priv ) // add privilege level to list
			COMMAND_HELPS = ( eXtreme_AddToList $COMMAND_HELPS $cmd_helpstr ) // add help string (which'll be shown when we call cmdhelp command)
			COMMAND_STATE = ( eXtreme_AddToList $COMMAND_STATE $cmd_enabled ) // add command state (enabled or disabled?)
			eXtreme_Output 2 ( format "[COMMAND-ADDER] Successfully added command %1 to commands list." ( escape $cmd_name ) ) 
		] [
			eXtreme_Output 2 ( format "[COMMAND-ADDER] Failed to add command %1 due to it's already added." ( escape $cmd_name ) ) 
		]
	] [
		eXtreme_Output 2 ( format "[COMMAND-ADDER] Failed to add command %1 because you didn't enter all required parameters to correctly add command." ( escape $cmd_name ) ) 
	]
]


// REMOVECOMMAND
// REMOVE COMMAND FROM LIST OF EXECUTABLE COMMANDS
// DOESN'T WORK IF COMMAND DOESN'T EXIST
eXtreme_RemoveCommand = [
	remove_name = $arg1 ; remove_index = -1
	cond ( !=s ( format $remove_name ) "" ) [
		cond ( eXtreme_CommandExists $remove_name ) [
			remove_index = ( indexof $COMMAND_NAMES $remove_name )
			COMMAND_NAMES = ( eXtreme_DeleteFromList $COMMAND_NAMES $remove_index ) // remove command name
			COMMAND_IDENT = ( eXtreme_DeleteFromList $COMMAND_IDENT $remove_index ) // remove command ident
			COMMAND_ARGTY = ( eXtreme_DeleteFromList $COMMAND_ARGTY $remove_index ) // remove command argument type list
			COMMAND_PRIVI = ( eXtreme_DeleteFromList $COMMAND_PRIVI $remove_index ) // remove command privilege level
			COMMAND_HELPS = ( eXtreme_DeleteFromList $COMMAND_HELPS $remove_index ) // remove command help string
			COMMAND_STATE = ( eXtreme_DeleteFromList $COMMAND_STATE $remove_index ) // remove command state 
			eXtreme_Output 2 ( format "[COMMAND-REMOVER] Successfully removed command %1 from commands list. [Index: %2]" ( escape $remove_name ) $remove_index )
		] [
			eXtreme_Output 2 ( format "[COMMAND-REMOVER] Failed to remove command %1 due to it doesn't exist." ( escape $remove_name ) )
		]
	] [
		eXtreme_Output 2 ( format "[COMMAND-REMOVER] Failed to remove command %1 because ou didn't enter all required parameters to correctly remove command." ( escape $remove_name ) )
	]
]


